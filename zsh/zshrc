# zsh

export EDITOR=nvim
export VISUAL=nvim
export PAGER=less
export LESSOPEN='| /opt/homebrew/bin/src-hilite-lesspipe.sh %s'
export LESS=' -R -X'
export KUBECTL_EXTERNAL_DIFF="colordiff -u -N"

# XDG configuration home
if [[ -z $XDG_CONFIG_HOME ]]
then
   export XDG_CONFIG_HOME=$HOME/.config
fi

# XDG data home
if [[ -z $XDG_DATA_HOME ]]
then
   export XDG_DATA_HOME=$HOME/.local/share
fi

# history settings
setopt HIST_VERIFY
setopt EXTENDED_HISTORY
setopt INC_APPEND_HISTORY
setopt HIST_FIND_NO_DUPS
export HISTFILE=~/.zsh-history
export SAVEHIST=1000000000
export HISTSIZE=1000000000
export HISTFILESIZE=1000000000
export HISTTIMEFORMAT="[%F %H:%M:%S] "

# work stuff
if [ -f ~/.workenv ]; then
  source ~/.workenv
fi

# pushd settings
export PUSHD_TO_HOME=true
export PUSH_SILENT=true

if [[ -n "$SSH_CLIENT" ]]; then
  REMOTE_IP=$(echo "$SSH_CLIENT" | cut -d' ' -f1)
fi

# command completions
if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi
autoload -U +X bashcompinit && bashcompinit
autoload -U +X compinit && compinit
source <(kubectl completion zsh)
source <(kustomize completion zsh)
source <(yq shell-completion zsh)
source <(eksctl completion zsh)
source <(helm completion zsh)
complete -C /usr/local/bin/vault vault
complete -C "$(brew --prefix)/Cellar/tfenv/3.0.0/versions/1.7.5/terraform" terraform

# local stuff
[ -f ~/.zsh-functions ]; source ~/.zsh-functions
[ -f ~/.zsh-aliases ]; source ~/.zsh-aliases

# zsh vi-mode, but with some changes to key bindings
bindkey -v
export KEYTIMEOUT=1
bindkey "^U" kill-whole-line
bindkey "^K" backward-kill-line
bindkey "^W" backward-kill-word
bindkey "^H" backward-delete-char
bindkey "^?" backward-delete-char

# press 'V' to open nvim to edit the current command line
export VISUAL=nvim
autoload edit-command-line; zle -N edit-command-line
bindkey -M vicmd V edit-command-line

# Change cursor shape for different vi modes.
function zle-keymap-select {
  if [[ ${KEYMAP} == vicmd ]] ||
     [[ $1 = 'block' ]]; then
    echo -ne '\e[1 q'
  elif [[ ${KEYMAP} == main ]] ||
       [[ ${KEYMAP} == viins ]] ||
       [[ ${KEYMAP} = '' ]] ||
       [[ $1 = 'beam' ]]; then
    echo -ne '\e[5 q'
  fi
}
zle -N zle-keymap-select
zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init
echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

# Ignore EOF (^D) at the cli
set -o ignoreeof

# fuzzy find
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f $XDG_CONFIG_HOME/fzf/file-functions.zsh ] && source $XDG_CONFIG_HOME/fzf/file-functions.zsh
export FZF_COMPLETION_TRIGGER=''
bindkey '^T' fzf-completion
bindkey '^F' fzf-completion
bindkey '^D' fzf-completion
bindkey '^I' $fzf_default_completion
export FZF_CTRL_R_OPTS="
  --preview 'echo {}' --preview-window up:12:hidden:wrap
  --bind 'ctrl-/:toggle-preview'
  --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
  --color header:italic
  --header 'Press CTRL-Y to copy command into clipboard'"

#
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$("$HOME/miniconda3/bin/conda" 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# autoloading functions
# autoload -z $XDG_CONFIG_HOME/zsh/{autoload,local}/**/*~*~(N.:t)

# . /usr/local/etc/profile.d/z.sh
eval "$(zoxide init --cmd j zsh)"

# syntax highlighting
[[ -f ~/code/armyers/f-sy-h/F-Sy-H.plugin.zsh ]] && source ~/code/armyers/f-sy-h/F-Sy-H.plugin.zsh

[[ -f $XDG_CONFIG_HOME/oh-my-posh/config.omp.json ]] && eval "$(oh-my-posh init zsh --config $XDG_CONFIG_HOME/oh-my-posh/config.omp.json)"
